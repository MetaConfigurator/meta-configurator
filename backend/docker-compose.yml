services:

  backend:
    container_name: backend
    build: .
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    environment:
      FLASK_ENV: development
      MONGO_USER: root
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB: metaconfigurator
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env.prod

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_DATABASE: metaconfigurator
    env_file:
      - .env.prod

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASS}
    volumes:
      - redis:/var/lib/redis/data
    restart: unless-stopped
    env_file:
    - .env.prod
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis: