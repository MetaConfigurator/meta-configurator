services:

  backend:
    container_name: backend
    build: .
    expose:
      - "5000"
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    environment:
      VIRTUAL_HOST: metaconfigurator.informatik.uni-stuttgart.de
      VIRTUAL_PORT: 5000
      LETSENCRYPT_HOST: metaconfigurator.informatik.uni-stuttgart.de
      LETSENCRYPT_EMAIL: felix.neubauer@ipvs.uni-stuttgart.de
      FLASK_ENV: development
      MONGO_USER: root
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB: metaconfigurator
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FLASK_ENABLE_SSL: "false"
    env_file:
      - .env.prod

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_DATABASE: metaconfigurator
    env_file:
      - .env.prod

  redis:
    image: redis:latest
    container_name: redis
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASS:?REDIS_PASS variable is not set}"
    volumes:
      - redis:/var/lib/redis/data
    restart: unless-stopped
    env_file:
    - .env.prod
    networks:
      - app-network

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/vhost.d
      - acme-challenges:/usr/share/nginx/html
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - app-network
    restart: unless-stopped

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    depends_on:
      - nginx-proxy
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      DEFAULT_EMAIL: felix.neubauer@ipvs.uni-stuttgart.de
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/nginx/vhost.d
      - acme-challenges:/usr/share/nginx/html
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis:
  acme-challenges: