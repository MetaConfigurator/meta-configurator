version: '3.8'

services:
  web:
    image: ghcr.io/metaconfigurator/meta_configurator:latest
    ports:
      - "80:80"    # Map port 80 on the host to port 80 in the container
      - "443:443"  # Map port 443 on the host to port 443 in the container, if using HTTPS
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
    networks:
      - app-network
    environment:
      FLASK_ENV: development
      MONGO_USER: root
      MONGO_PASS: ${MONGO_PASSWORD}
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DB: metaconfigurator
      REDIS_URL: redis://redis:6379/0
      REDIS_PASS: ${REDIS_PASSWORD}
    env_file:
      - .env.prod

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: metaconfigurator
    env_file:
      - .env.prod
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    volumes:
      - redis:/var/lib/redis/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
    - .env.prod
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis: